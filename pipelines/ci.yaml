# Specification for normal Continuous Integration Triggers
trigger:
  branches:
    include:
      - master
  paths:
    include:
      - pipelines
      - requirements
      - src
      - terraform
      - k8s
      - Dockerfile
# specification for Pull Request triggers
pr:
  branches:
    include:
      - master
  paths:
    include:
      - pipelines
      - requirements
      - src
      - terraform
      - k8s
      - Dockerfile

pool: MyComputer

variables:
# it is expected to have DOCKER_ID and DOCKER_PASSWORD defined in this Azure Pipelines variable group
  - group: docker_credentials
  - group: aws_credentials

stages:
  - stage: lint
    jobs:
      - job: terraform
        steps:
          - bash: |
              git clone https://github.com/tfutils/tfenv.git
              echo "##vso[task.prependpath]~/.tfenv/bin"
            displayName: Install tfenv
          - bash: |
              terraform init
            displayName: terraform init
            workingDirectory: ./terraform
            env:
              AWS_ACCESS_KEY_ID: $(AWS_ACCESS_KEY_ID)
              AWS_SECRET_ACCESS_KEY: $(AWS_SECRET_ACCESS_KEY)
          - bash: |
              terraform fmt -recursive -check -diff
            displayName: terraform lint
            workingDirectory: ./terraform
  - stage: test_build_and_push
    dependsOn:
      - lint
    jobs:
      - job: test_build_and_push
        steps:
          - bash: |
              sh run-tests.sh
            workingDirectory: ./scripts
            displayName: Run Tests
          - bash: |
              sh build-and-deploy-docker-image.sh
            env:
              DOCKER_ID: $(DOCKER_ID)
              DOCKER_PASSWORD: $(DOCKER_PASSWORD)
            displayName: Build and deploy
            workingDirectory: ./scripts
  - stage: plan
    dependsOn:
      - test_build_and_push
    jobs:
      - job: terraform_plan
        steps:
          - bash: |
              git clone https://github.com/tfutils/tfenv.git
              echo "##vso[task.prependpath]~/.tfenv/bin"
            displayName: Install tfenv
          - bash: |
              terraform init
              terraform plan
            displayName: Terraform plan
            workingDirectory: ./terraform
            env:
              AWS_ACCESS_KEY_ID: $(AWS_ACCESS_KEY_ID)
              AWS_SECRET_ACCESS_KEY: $(AWS_SECRET_ACCESS_KEY)
              
  
        